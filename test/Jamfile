# Copyright (C) 2001-2003
# William E. Kempf
#
# Permission to use, copy, modify, distribute and sell this software
# and its documentation for any purpose is hereby granted without fee,
# provided that the above copyright notice appear in all copies and
# that both that copyright notice and this permission notice appear
# in supporting documentation.  William E. Kempf makes no representations
# about the suitability of this software for any purpose.
# It is provided "as is" without express or implied warranty.
#
# Boost.Threads test Jamfile
#
# Additional configuration variables used:
#   See threads.jam.

# Declare the location of this subproject relative to the root.
subproject libs/thread/test ;

# Include threads.jam for Boost.Threads global build information.
# This greatly simplifies the Jam code needed to configure the build
# for the various Win32 build types.
import ../build/threads ;

# bring in rules for testing
import testing ;

{
     template boost_thread_test_lib
         : ## sources ##
             <template>thread_base
             ../src/tss_null.cpp
             <lib>../build/boost_thread
             <lib>../../test/build/boost_unit_test_framework
             #<lib>../../test/build/boost_test_exec_monitor
         : ## requirements ##
             <sysinclude>$(BOOST_ROOT) #:should be unnecessary (because already included in thread_base)
             <define>BOOST_ALL_NO_LIB=1
             <define>BOOST_THREAD_USE_LIB=1
             <define>BOOST_THREAD_TEST=1
             <runtime-link>static
             <threading>multi
         : ## default build ##
     ;
    
     template boost_thread_test_dll
         : ## sources ##
             <template>thread_base
             ../src/tss_null.cpp
             <dll>../build/boost_thread
             <lib>../../test/build/boost_unit_test_framework
             #<lib>../../test/build/boost_test_exec_monitor
         : ## requirements ##
             <sysinclude>$(BOOST_ROOT) #:should be unnecessary (because already included in thread_base)
             <define>BOOST_ALL_NO_LIB=1
             <define>BOOST_THREAD_USE_DLL=1
             <define>BOOST_THREAD_TEST=1
             <runtime-link>dynamic
             <threading>multi
         : ## default build ##
     ;

     test-suite "threads"
         : 
           [ run test_thread.cpp <template>boost_thread_test_dll ]
           [ run test_mutex.cpp <template>boost_thread_test_dll ]
           [ run test_condition.cpp <template>boost_thread_test_dll ]
           [ run test_tss.cpp <template>boost_thread_test_dll ]
           [ run test_once.cpp <template>boost_thread_test_dll ]
           [ run test_xtime.cpp <template>boost_thread_test_dll ]
           [ run test_barrier.cpp <template>boost_thread_test_dll ]
           [ run test_read_write_mutex.cpp <template>boost_thread_test_dll ]
           
           [ run test_thread.cpp <template>boost_thread_test_lib           : : : : test_thread_lib ]
           [ run test_mutex.cpp <template>boost_thread_test_lib            : : : : test_mutex_lib  ]
           [ run test_condition.cpp <template>boost_thread_test_lib        : : : : test_condition_lib  ]
           [ run test_tss.cpp <template>boost_thread_test_lib              : : : : test_tss_lib  ]
           [ run test_once.cpp <template>boost_thread_test_lib             : : : : test_once_lib  ]
           [ run test_xtime.cpp <template>boost_thread_test_lib            : : : : test_xtime_lib  ]
           [ run test_barrier.cpp <template>boost_thread_test_lib          : : : : test_barrier_lib  ]
           [ run test_read_write_mutex.cpp <template>boost_thread_test_lib : : : : test_read_write_mutex_lib  ]
     ;
}
