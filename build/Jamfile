# Copyright (C) 2001-2003
# William E. Kempf
#
# Permission to use, copy, modify, distribute and sell this software
# and its documentation for any purpose is hereby granted without fee,
# provided that the above copyright notice appear in all copies and
# that both that copyright notice and this permission notice appear
# in supporting documentation.  William E. Kempf makes no representations
# about the suitability of this software for any purpose.
# It is provided "as is" without express or implied warranty.
#
# Boost.Threads build Jamfile
#
# Additional configuration variables used:
#   See threads.jam.

# Declare the location of this subproject relative to the root.
subproject libs/thread/build ;

# Include threads.jam for Boost.Threads global build information.
# This greatly simplifies the Jam code needed to configure the build
# for the various Win32 build types.
import ./threads ;

{
    CPP_SOURCES =
        barrier
        condition
        exceptions
        mutex
        once
        recursive_mutex
        read_write_mutex
        thread
        tss_hooks
        tss_dll
        tss_pe
        tss
        xtime
        ;

    template boost_thread_lib_base
        : ## sources ##
          <template>thread_base
          ../src/$(CPP_SOURCES).cpp
        : ## requirements ##
          <sysinclude>$(BOOST_ROOT) #:should be unnecessary (because already included in thread_base)
          <define>BOOST_THREAD_BUILD_LIB=1
          <runtime-link>static
          # the common names rule ensures that the library will
          # be named according to the rules used by the install
          # and auto-link features:
          common-variant-tag
        : ## default build ##
    ;

    template boost_thread_dll_base
        : ## sources ##
          <template>thread_base
          ../src/$(CPP_SOURCES).cpp
        : ## requirements ##
          <sysinclude>$(BOOST_ROOT) #:should be unnecessary (because already included in thread_base)
          <define>BOOST_THREAD_BUILD_DLL=1
          <runtime-link>dynamic
          # the common names rule ensures that the library will
          # be named according to the rules used by the install
          # and auto-link features:
          common-variant-tag
        : ## default build ##
    ;

    lib $(boost_thread_lib_name)
        : ## sources ##
          <template>boost_thread_lib_base
        : ## requirements ##
          <define>BOOST_THREAD_LIB_NAME=$(boost_thread_lib_name)
        : ## default build ##
    ;

    dll $(boost_thread_lib_name)
        : ## sources ##
          <template>boost_thread_dll_base
        : ## requirements ##
          <define>BOOST_THREAD_LIB_NAME=$(boost_thread_lib_name)
        : ## default build ##
    ;

    stage bin-stage
        : <dll>$(boost_thread_lib_name)
          <lib>$(boost_thread_lib_name)
    ;

    install thread lib
        : <dll>$(boost_thread_lib_name)
          <lib>$(boost_thread_lib_name)
    ;

    if $(boost_thread_lib_settings_ptw32)
    {
        lib $(boost_thread_lib_name_ptw32)
            : ## sources ##
              <template>boost_thread_lib_base
            : ## requirements ##
              <define>BOOST_THREAD_LIB_NAME=$(boost_thread_lib_name_ptw32)
              $(pthreads-win32)
        ;

        dll $(boost_thread_lib_name_ptw32)
            : ## sources ##
              <template>boost_thread_dll_base
            : ## requirements ##
              <define>BOOST_THREAD_LIB_NAME=$(boost_thread_lib_name_ptw32)
              $(pthreads-win32)
        ;

        stage bin-stage
            : <dll>$(boost_thread_lib_name_ptw32)
              <lib>$(boost_thread_lib_name_ptw32)
        ;

        install thread lib
            : <dll>$(boost_thread_lib_name_ptw32)
              <lib>$(boost_thread_lib_name_ptw32)
        ;
    }
}
