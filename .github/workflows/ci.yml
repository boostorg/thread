name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - feature/**

env:
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  posix:
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: gcc-4.8
            os: ubuntu-latest
            container: ubuntu:18.04
            cxxstd: 11
            install: g++-4.8
          - toolset: gcc-5
            cxxstd: 11
            os: ubuntu-latest
            container: ubuntu:18.04
            install: g++-5
          - toolset: gcc-7
            os: ubuntu-20.04
            install: g++-7
          - toolset: gcc-9
            os: ubuntu-20.04
          - toolset: gcc-11
            os: ubuntu-22.04
          - toolset: clang
            compiler: clang++-15
            cxxstd: 20
            os: ubuntu-22.04
            install: clang-15
          - toolset: clang
            os: macos-13
            cxxstd: 14
          - toolset: clang
            os: macos-14
            cxxstd: 17

    runs-on: ${{matrix.os}}
    container:
      image: ${{matrix.container}}
      volumes:
        - /node20217:/node20217:rw,rshared
        - ${{ startsWith(matrix.container, 'ubuntu:1') && '/node20217:/__e/node20:ro,rshared' || ' ' }}

    steps:
      - name: Setup container environment
        if: matrix.container
        run: |
          apt-get update
          apt-get -y install sudo python3 git g++ curl
          if [[ "${{matrix.container}}" == "ubuntu:1"* ]]; then
            # Node 20 doesn't work with Ubuntu 16/18  glibc: https://github.com/actions/checkout/issues/1590
            curl -sL https://archives.boost.io/misc/node/node-v20.9.0-linux-x64-glibc-217.tar.xz | tar -xJ --strip-components 1 -C /node20217
          fi

      - uses: actions/checkout@v4

      - name: Install packages
        if: matrix.install
        run: |
          sudo apt-get update
          sudo apt-get -y install ${{matrix.install}}

      - name: Setup Boost
        run: |
          echo GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          LIBRARY=${GITHUB_REPOSITORY#*/}
          echo LIBRARY: $LIBRARY
          echo "LIBRARY=$LIBRARY" >> $GITHUB_ENV
          echo GITHUB_BASE_REF: $GITHUB_BASE_REF
          echo GITHUB_REF: $GITHUB_REF
          REF=${GITHUB_BASE_REF:-$GITHUB_REF}
          REF=${REF#refs/heads/}
          echo REF: $REF
          BOOST_BRANCH=develop && [ "$REF" == "master" ] && BOOST_BRANCH=master || true
          echo BOOST_BRANCH: $BOOST_BRANCH
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          cp -r $GITHUB_WORKSPACE/* libs/$LIBRARY
          git submodule update --init tools/boostdep
          python3 tools/boostdep/depinst/depinst.py --git_args "--jobs 3" $LIBRARY
          ./bootstrap.sh
          ./b2 -d0 headers

      - name: Create user-config.jam
        if: matrix.compiler
        run: |
          echo "using ${{matrix.toolset}} : : ${{matrix.compiler}} ;" > ~/user-config.jam

      - name: Run tests
        run: |
          cd ../boost-root
          export CXXSTD=${{matrix.cxxstd}}
          ./b2 -j3 libs/$LIBRARY/test toolset=${{matrix.toolset}} ${CXXSTD:+cxxstd=$CXXSTD} variant=debug,release
